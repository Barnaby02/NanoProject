import numpy as np
import matplotlib.pyplot as plt

def generate_3d_grid(x_size, y_size, z_size):
    """
    Generates a 3D grid filled with ones.
    Parameters:
    - x_size, y_size, z_size: Dimensions of the grid.
    Returns:
    - x, y, z: 3D Meshgrid arrays.
    - volume: 3D array filled with ones of shape (x_size, y_size, z_size).
    """
    volume = np.ones((x_size, y_size, z_size))
    x, y, z = np.meshgrid(np.arange(x_size), np.arange(y_size), np.arange(z_size), indexing='ij')
    return x, y, z, volume


def delete_plane(volume, x, y, z, point, normal):
    """
    Deletes one side of a plane from the given 3D volume.
    
    Parameters:
    - volume: 3D numpy array representing the volume to modify.
    - x, y, z: Meshgrid arrays.
    - point: A point (x0, y0, z0) through which the plane passes.
    - normal: Normal vector (a, b, c) of the plane.
    - side: 'positive' or 'negative' to specify which side of the plane to delete.

    Returns:
    - volume: Modified 3D array with one side of the plane deleted.
    """
    a, b, c = normal
    x0, y0, z0 = point

    # Equation of the plane: a(x-x0) + b(y-y0) + c(z-z0) = 0
    # Points on the positive side of the plane will satisfy: a(x-x0) + b(y-y0) + c(z-z0) > 0
    # Points on the negative side of the plane will satisfy: a(x-x0) + b(y-y0) + c(z-z0) < 0

    plane_eq = a * (x - x0) + b * (y - y0) + c * (z - z0)
    mask = plane_eq > 0
    volume[mask] = 0
    return volume


def generate_cube(res, x0, y0, z0, side_length):
    volume, x, y, z = generate_3d_grid(res, res, res)
    a = np.random.uniform(0, side_length/2)
    b = np.random.uniform(0, np.sqrt((side_length/2)**2 - a**2))
    c = np.sqrt((side_length/2)**2 - a**2 - b**2)
    volume = delete_plane(volume, x, y, z, (x0 + a, y0 + b, z0 + c), (a, b, c))
    volume = delete_plane(volume, x, y, z, (x0 + a, y0 + b, z0 + c), (-a, -b, -c))
    volume = delete_plane(volume, x, y, z, (x0 + a, y0 + b, z0 + c), (b, c, a))
    volume = delete_plane(volume, x, y, z, (x0 + a, y0 + b, z0 + c), (-b, -c, -a))
    volume = delete_plane(volume, x, y, z, (x0 + a, y0 + b, z0 + c), (c, a, b))
    volume = delete_plane(volume, x, y, z, (x0 + a, y0 + b, z0 + c), (-c, -b, -a))
    return volume

volume = generate_cube(128, 64, 64, 64, 60)
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.voxels(volume, edgecolor='k')
plt.show()
